[tox]
envlist =
    docs, packaging, lint-py2, lint-py3,
    py27, py33, py34, py35, py36, py37, pypy

[helpers]
# Wrapper for calls to pip that make sure the version being used is the
# original virtualenv (stable) version, and not the code being tested.
pip = python {toxinidir}/.tox_helpers/runpip.py
# Wrapper for the {install_command} that will use the above and
# automatically unvendor the code being tested after each install.
unvendor = python {toxinidir}/.tox_helpers/unvendor.py --use-wheels

[testenv]
setenv =
    # This is required in order to get UTF-8 output inside of the subprocesses
    # that our tests use.
    LC_CTYPE = en_US.UTF-8
deps = -r{toxinidir}/dev-requirements.txt
commands = py.test --timeout 300 []
install_command = {[helpers]pip} install {opts} {packages}
list_dependencies_command = {[helpers]pip} freeze

# Support for unvendored environments
[testenv:py27-novendor]
install_command = {[helpers]unvendor} {opts} {packages}
[testenv:py36-novendor]
install_command = {[helpers]unvendor} {opts} {packages}

[testenv:docs]
deps = sphinx == 1.6.1
basepython = python2.7
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b man -d {envtmpdir}/doctrees docs docs/_build/man

[testenv:packaging]
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest
    python setup.py check -m -r -s

[lint]
deps =
    flake8==3.3.0
    isort==4.2.5
commands =
    flake8 .
    isort --recursive --check-only --diff pip tests

[testenv:lint-py2]
basepython = python2
deps = {[lint]deps}
commands = {[lint]commands}

[testenv:lint-py3]
basepython = python3
deps = {[lint]deps}
commands = {[lint]commands}
