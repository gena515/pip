name: ðŸ¤–

on:
  push:
  pull_request:
  schedule:
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  - cron: 2 18 * * 5

jobs:
  linters:
    name: @${{ matrix.os }} ${{ matrix.env.TOXENV }}
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os:
        - ubuntu
        - windows
        - macos
        env:
        - TOXENV: docs
        - TOXENV: lint
        - TOXENV: vendoring

    env:
      TOX_PARALLEL_NO_SPINNER: 1

    steps:

    # Setup Python and git.
    - uses: actions/checkout@master

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Pre-configure global Git settings
      run: |
        git config --global user.email "pypa-dev@googlegroups.com"
        git config --global user.name "pip"

    # Set up caching
    - name: set PY
      run: echo "::set-env name=PY::$(python -VV | sha256sum | cut -d' ' -f1)"

    - name: Storing pip's cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/requirements/tests.txt') }}-${{ hashFiles('tools/requirements/docs.txt') }}-${{ hashFiles('tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Storing pre-commit's cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|2020-02-14|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

    # Update tooling
    - name: Update setuptools
      run: python -m pip install --upgrade setuptools
    - name: Install tox
      run: python -m pip install --upgrade tox
    - name: Log the list of packages
      run: python -m pip freeze --all

    - name: 'Initialize tox envs: ${{ matrix.env.TOXENV }}'
      run: >-
        python -m
        tox
        --parallel auto
        --notest
        --skip-missing-interpreters false
      env: ${{ matrix.env }}
    - name: Pre-fetch pre-commit hooks
      # This is to separate test step from deps install
      if: matrix.env.TOXENV == 'lint'
      run: >-
        .tox/lint/${{ runner.os == 'Windows' && 'Scripts' || 'bin' }}/python -m
        pre_commit
        install-hooks
    - name: Test with tox
      run: >-
        python -m
        tox
        --parallel auto
      env: ${{ matrix.env }}
